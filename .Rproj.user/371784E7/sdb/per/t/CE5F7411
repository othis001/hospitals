{
    "collab_server" : "",
    "contents" : "## rankhospital is a function that takes three arguments: the 2-character abbreviated name of a\n## state (state), an outcome (outcome), and the ranking of a hospital in that state for that outcome (num).\n## The function reads the outcome-of-care-measures.csv file and returns a character vector with the name\n## of the hospital that has the ranking specified by the num argument.\n\nrankhospital <- function(state, outcome, num = \"best\") {\n    ## Reads outcome data.\n\n    thedata <- read.csv(\"outcome-of-care-measures.csv\", na.strings=\"Not Available\")\n    \n    ## Checks that state and outcome are valid.\n    \n    thedata <- thedata[ which(thedata$State == state), ]\n    \n    if(nrow(thedata) == 0) stop(\"invalid state\")\n    \n    if(outcome == \"heart failure\") hname <- \"Heart.Failure\"\n    else if(outcome == \"heart attack\") hname <- \"Heart.Attack\"\n    else if(outcome == \"pneumonia\") hname <- \"Pneumonia\"\n    else stop(\"invalid outcome\")\n    \n    hname <- paste(\"Hospital.30.Day.Death..Mortality..Rates.from.\", hname, sep = \"\")\n    \n    ## First we extract and sort the deathrates.\n    \n    thedata <- thedata[complete.cases(thedata[ , hname]), ]\n    thedata[ , hname] <- as.numeric(as.character(thedata[,hname]))\n    \n    deathrates <- thedata[ , hname]\n    deathrates <- sort(deathrates)\n    \n    ## Now we find the desired position (pos) and value (val) in the sorted deathrate vector.\n    \n    if(num == \"best\") pos <- 1\n    else if(num == \"worst\") pos <- length(deathrates)\n    else if(num > length(deathrates) || num < 1) return(NA)\n    else pos <- num\n\n    val <- deathrates[pos]\n\n    ## minpos is the position of the first occurence of val in our deathrates vector.\n    \n    minpos <- min(which(deathrates == val))\n\n    ## Now we remove all rows except for ones with a deathrate of val, and order.\n    \n    thedata <- thedata[thedata[, hname] == val,]\n    thedata <- thedata[order(thedata$Hospital.Name),]\n    \n    ## pos-minpos+1 will be the correct position in whats left in our data frame.\n    \n    as.character(thedata[pos - minpos + 1,2])\n}",
    "created" : 1480965530704.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1346275857",
    "id" : "CE5F7411",
    "lastKnownWriteTime" : 1480972802,
    "last_content_update" : 1480972802007,
    "path" : "~/R2/week4/rankhospital.R",
    "project_path" : "rankhospital.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}